


pred=np.array([     6, 959345,      0,   8948,      0,      0,      0, 148630,   7412.
 270698,      0,      0.])
true=np.array([3125667, 1097293,    5365,   18312,     155,       0,    1294,  253611.
   89721, 1523963,       0,   92107.])
aa=
[@debug] stats["overall_accuracy"] = 0.2247348685974101
[@debug] stats["average_accuracy"] = 0.36820349045307843





[4222960    5365   18312     155    1294  253611   89721 1523963   92107






[ 0  1  2  3  4  6  7  8  9 11]
[@debug] count = [3125667 1097293    5365   18312     155    1294  253611   89721 1523963
   92107]  

import numpy as np
b=3000000-np.array([0,1097293,    5365,   18312,     155,       0,    1294,  253611,89721, 1523963,       0,   92107.])
c=b/np.max(b)




Epoch=1341
[@debug] data['prediction_h'].dtype = float64
[@debug] data['label_h'].dtype = float64
[@debug] data['prediction_h'].shape = (6207488, 11)
[@debug] data['label_h'].shape = (6207488, 11)
[@debug] data['label_h'][0] = [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
[@debug] data['prediction_h'][0] = [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
[@debug] metrics['confusion_matrix'] = [[1593923      81      65       0     227   22255    1236  212764    1960]
 [   9127    5089       0       0       0     467       0      89     258]                                                                                              
 [  57265     185   11121       0     156     557       7   42435     926]                                                                                              
 [   9331       0       0       0       0     915       0       0    1325]                                                                                              
 [   7050       0    1950       0      88    1491      10    6395     224]                                                                                              
 [1280112      10      46     109       0  195714   28275    8355   23366]                                                                                              
 [  74926       0       0       0       0       1   48635       4     113]                                                                                              
 [ 704093       0    5107       0     823   18624    3297 1250034    1324]                                                                                              
 [ 487133       0      23      46       0   13587    8261    3887   62611]]                                                                                             
[@debug] correct_per_class = [1.593923e+06 5.089000e+03 1.112100e+04 0.000000e+00 0.000000e+00
 8.800000e+01 1.957140e+05 4.863500e+04 1.250034e+06 0.000000e+00                                                                                                       
 6.261100e+04 0.000000e+00]
[@debug] pred_class_count = [1832511   15030  112652   11571   17208 1535987  123679 1983302  575548]
[@debug] pred_unique+1 = [ 1  2  3  4  6  7  8  9 11]
[@debug] per_class_count = [4222960    5365   18312     155    1294  253611   89721 1523963   92107]
[@debug] unique+1 = [ 1  2  3  4  6  7  8  9 11]
[@debug] metrics['per_class_acc'] = [0.94855547 0.60730666 0.                nan 0.06800618 0.77170944
 0.5420693  0.8202522         nan 0.67976373        nan]
oa=0.40222759995669743, aa=nan, f1=0.2621090796692585
Train loss=[[0.00475983 0.66008206]], Test loss=[[0.0398472  0.40230112]]
[@debug] data.patches['test']['label'].shape = (6062, 32, 32, 12)
[@debug] idx1 = 6048
Epoch=1342
[@debug] data['prediction_h'].dtype = float64
[@debug] data['label_h'].dtype = float64
[@debug] data['prediction_h'].shape = (6207488, 11)
[@debug] data['label_h'].shape = (6207488, 11)
[@debug] data['label_h'][0] = [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
[@debug] data['prediction_h'][0] = [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]







Train loss=[[0.05446089 0.55537648]], Test loss=[[0.06719232 0.3633045 ]]
[@debug] data.patches['test']['label'].shape = (6062, 32, 32, 12)
[@debug] idx1 = 6048
Epoch=46
[@debug] data['label_h'].shape = (6207488, 11)
[@debug] data['prediction_h'].shape = (6207488, 11)
[@debug] data['prediction_h'].dtype = float64
[@debug] data['label_h'].dtype = float64
[@debug] data['prediction_h'].shape = (2814744, 11)
[@debug] data['label_h'].shape = (2814744, 11)
[@debug] data['label_h'][0] = [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
[@debug] data['prediction_h'][0] = [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
[@debug] metrics['confusion_matrix'] = [[ 798926     847     595      44   19893    1993  180999   10408]
 [      0       0       0       0       0       0       0       0]                                                                                                      
 [   8446    1222    9847       0    1764     195   31795    7400]                                                                                                      
 [      0       0       0       0       0       0       0       0]                                                                                                      
 [   2735       7       2      28  182486   11382    6366   35265]                                                                                                      
 [     67       0       0       0    1960   65586      32    2643]                                                                                                      
 [ 190821    3289    3088       0   18896     542 1176067     947]                                                                                                      
 [     57       0       0       0    7694    3941    1275   25194]]                                                                                                     
[@debug] correct_per_class = [ 798926.       0.    9847.       0.       0.       0.  182486.   65586.
 1176067.       0.   25194.       0.]                                                                                                                                   
[@debug] pred_class_count = [1013705   60669  238271   70288 1393650   38161]
[@debug] pred_unique+1 = [ 1  3  7  8  9 11]
[@debug] per_class_count = [1001052    5365   13532      72  232693   83639 1396534   81857]
[@debug] unique+1 = [ 1  2  3  4  7  8  9 11]
[@debug] metrics['per_class_acc'] = [0.         0.72768253 0.                nan        nan 0.784235
 0.7841557  0.84213275        nan 0.30778065        nan]                                                                                                                
oa=0.8014934928362935, aa=nan, f1=0.35908301412250515
Train loss=[[0.05353389 0.55612483]], Test loss=[[0.06805545 0.36427315]]
[@debug] data.patches['test']['label'].shape = (6062, 32, 32, 12)




[[ 826706    2547    1770       0    9491     117  167740   15097]
 [      0       0       0       0       0       0       0       0]
 [  10383    2034    3404       0     462     100   18396     621]
 [      0       0       0       0       0       0       0       0]
 [  11269     691     797      72  218012   25722   13434   56207]
 [    195       0       0       0     994   56001     261    6141]
 [ 152337      93    7560       0    2874     197 1196252     759]
 [    162       0       1       0     860    1502     451    3032]]


Test unique+1,count [ 1  2  3  4  7  8  9 11] [1001052    5365   13532      72  232693   83639 1396534   81857]
[@debug] metrics['confusion_matrix'] = [[822947   1954    698     21  12307   7012 429639   4608]
 [     0      0      0      0      0      0      0      0]
 [  8438    371   1076      0    598    599  52799    275]
 [     0      0      0      0      0      0      0      0]
 [ 58006   3006   6272     45 215107  53233 102649  72417]
 [  1258      8     52      0   1080  13610   7311   1758]
 [110167     13   5422      5   2878   7872 802570   2064]
 [   236     13     12      1    723   1313   1566    735]]

822947+8438+58006+1258+110167+236





[@debug] metrics['per_class_acc'][~np.isnan(metrics['per_class_acc'])] = 
[[ 864941       0    9624       0   19038     229  107114     106]
 [   2848       0    1688       0     228       0     601       0]
 [    161       0    2756       0    2084       0    8531       0]
 [      0       0       0       0      72       0       0       0]
 [   9050       0     264       0  217404     991    4071     913]
 [    196       0      19       0   20509   59440     185    3290]
 [ 282979       0   40249       0   28187     712 1044013     394]
 [   4780       0      19       0   67612    5701     394    3351]]
[@debug] data['prediction_h'],data['label_h'] = [0.86403204 0.         0.20366539 0.         0.9342954  0.71067325
 0.74757435 0.04093724]



[@debug] data['label_h'].shape = (6196224, 11)
[@debug] data['prediction_h'].shape = (6196224, 11)
[@debug] data['prediction_h'].dtype = float64
[@debug] data['label_h'].dtype = float64
[@debug] data['prediction_h'].shape = (2814744, 11)
[@debug] data['label_h'].shape = (2814744, 11)
[@debug] data['label_h'][0] = [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
[@debug] data['prediction_h'][0] = [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Test unique+1,count [ 1  2  3  4  7  8  9 11] [1001052    5365   13532      72  232693   83639 1396534   81857]
Prediction unique+1,count [ 1  3  7  8  9 11] [ 963453   69573  289060   87066 1363628   41964]
[@debug] metrics['confusion_matrix'] = [[ 818431       0   29245       0    7868     408  143925    1175]
 [    220       0    4383       0     508       0     180      74]
 [    842       0   11184       0      12       3    1480      11]
 [      0       0       0       0      55       0       0      17]
 [   6318       0    2148       0  208347    5767    2432    7681]
 [      9       0     356       0    6028   70535      87    6624]
 [ 131202       0   21745       0   20057     506 1215146    7878]
 [   6431       0     512       0   46185    9847     378   18504]]
[@debug] metrics['per_class_acc'] = [0.81757092 0.         0.82648537 0.         0.89537287 0.84332668
 0.87011559 0.22605275]
Best metric updated
oa=0.8320994733446452, aa=0.5598655213896296, f1=0.35526762550051005
Train loss=[[0.07851311 0.54372523]], Test loss=[[0.08466916 0.37818335]]


import numpy as np
count=np.array([1001052 ,   5365 ,  13532   ,   72 , 232693  , 83639, 1396534 ,  81857])
w=np.max(count)/count
print(w)
array([1.39506639e+00, 2.60304567e+02, 1.03202335e+02, 1.93963056e+04,
       6.00161586e+00, 1.66971628e+01, 1.00000000e+00, 1.70606546e+01])


[0., 0.06051054, 0.13370499, 0.13283712, 0.13405423,0., 0.13397788, 0.11706449, 0.12805041, 0.03190986,0., 0.12789048]



Test unique+1,count [ 1  2  3  4  7  8  9 11] [1001052    5365   13532      72  232693   83639 1396534   81857]
Prediction unique+1,count [ 1  2  3  4  7  8  9 11] [1148661    8146   53943   20857  286386   75581 1160100   61070]
[@debug] metrics['confusion_matrix'] = [[ 855849    1901   12858   13222   14023     759  100153    2287]
 [    383    4217     690      11      26      24       4      10]                                                                                                      
 [     73       1   12999       0      53      81     310      15]                                                                                                      
 [      0       0       0       4      16       0       0      52]                                                                                                      
 [   9615    1601     199    2845  194504    2856    2050   19023]                                                                                                      
 [     90       0      26     154    9948   69257     152    4012]                                                                                                      
 [ 279474     413   27140    1841   23228    1080 1056733    6625]                                                                                                      
 [   3177      13      31    2780   44588    1524     698   29046]]                                                                                                     
[@debug] metrics['per_class_acc'] = [0.85494959 0.7860205  0.96061188 0.05555556 0.83588247 0.82804672
 0.75668262 0.35483832]                                                                                                                                                 
oa=0.7896309575577743, aa=0.6790734578041588, f1=0.42360449617002804
Train loss=[[0.54774089 0.53163621]], Test loss=[[2.55001748 0.35888171]]
Deb prints error. Value: (6051, 32, 32, 12)
Deb prints error. Value: 6048


With overlap 12

Test distr.:

[ 1  2  3  4  6  7  8  9 11] [1846015    9657   26449      12    1074  436895  157703 2610833  153666]

import numpy as np
count=np.array([1846015 ,   9657,   26449  ,    12   , 1074 , 436895 , 157703, 2610833 , 153666])
w=np.max(count)/count
print(w)